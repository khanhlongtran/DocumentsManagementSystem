@addTagHelper *,Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Real-Time Collaborative Text Editor with SignalR</title>
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"
            integrity="sha256-2Kok7MbOyxpkg/4hF+8ATFh9UC0D6abA/ZbHNF3k75T4="
            crossorigin="anonymous"></script>
    <style>
        /* increase height of ckeditor*/
        .ck-editor__editable_inline {
            min-height: 500px;
            min-width: 500px;
        }
    </style>

</head>
<body>

    <form asp-controller="#" asp-action="#" method="post">
        <table>
            <tr>
                <td>File Name: </td>
                <td><input name="name" type="text" /></td>
            </tr>
            <tr>
                <td>Content:</td>
                <td><textarea name="editTextArea" id="editTextArea"></textarea></td>
            </tr>
            <tr>
                <td colspan="2"><input id="Submit1" type="Submit" value="Submit" /></td>
            </tr>
        </table>
    </form>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/editHub")
            .build();

        connection.on("ReceiveTextUpdate", (newText) => {
            document.getElementById("editTextArea").value = newText;
        });

        connection.start().catch(err => console.error(err));

        const editTextArea = document.getElementById("editTextArea");

        // Event listener for text change
        editTextArea.addEventListener("input", () => {
            const newText = editTextArea.value;

            // Send text update to the server
            connection.invoke("SendTextUpdate", newText).catch(err => console.error(err));

            // If you want to update immediately on the local client without waiting for the server response:
            // document.getElementById("editTextArea").value = newText;
        });
    </script>
    @section Scripts {
        <script src="https://cdn.ckeditor.com/ckeditor5/34.0.0/classic/ckeditor.js"></script>
        <script>
            $(document).ready(function () {
                // ckeditor 5 initialization
                ClassicEditor
                    .create(document.getElementById('editTextArea'))
                    .then(editor => {
                        // Set default value
                        editor.setData('Default text goes here.');

                        console.log(editor);
                    })
                    .catch(error => {
                        console.error(error);
                    });
            });
        </script>
    }
</body>
</html>
